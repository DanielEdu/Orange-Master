<!DOCTYPE html>
<html >
  <head>
    <title>ONE</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
  
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/ejemplo.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/jquery-ui.min.css">
    <link rel="stylesheet" href="/styles/jquery-ui.structure.min.css">
    <link rel="stylesheet" href="/styles/jquery-ui.theme.min.css">
    <link rel="stylesheet" href="/styles/jquery.dataTables.css">
    <link rel="stylesheet" href="/styles/normalize.css">
    <link rel="stylesheet" href="/styles/switch.css">
    <!--STYLES END-->
  </head>

  <body>

  
      <div class="container header">
      <div>
        <img src="/images/1.png" alt="">
      </div>
        <div clas="navbar-collapse collapse">

          <ul class="nav navbar-nav">
            <% if (session.authenticated && session.User.admin==='trainer' ) { %>
              <li><a href="/clientdetail/search/">Rutinas</a></li>
            <% } %>
            <% if (session.authenticated) { %>
              <li><a href="/sale/new/"> Ventas </a></li>
              <li><a href="/expense/new/"> Egresos </a></li>
              <li><a href="/report/new/"> Reporte De Egresos </a></li>
              <li><a href="/salereport/new/"> Reporte De Ventas </a></li>
            <% } %>
            <% if (session.authenticated && session.User.admin==='admin' ) { %>
              <li><a href="/clientdetail/search/">Rutinas</a></li>
              <li><a href="/client/">Clientes</a></li>
              <li><a href="/service/">Servicios</a></li>
              <li><a href="/user/">Usuarios</a></li>
            <% } %>

          </ul>
          <div class="navbar-right">
            <% if (session.authenticated) { %>
               <% if (session.User.admin === 'admin') { %>
                <img src="/images/admin.png">
                <% }%>
               <% if (session.User.admin === 'trainer') { %> 
               <img src="/images/trainer.png">
               <% }%>
               <% if (session.User.admin === 'user') { %>
               <img src="/images/pawn.png">
                <% } %> 
                
                <a class="btn btn-default navbar-btn " href="/user/show/<%= session.User.id_user%>"> <%= session.User.firstName %>   </a>
              <a class="btn btn-default navbar-btn navbar-right" href="/session/destroy">Salir</a>
            <% } %>
          </div>
        </div>
      </div>
   
    <%- body %>

 <footer>
      desarrollado por: 
</footer>

    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
   

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/alertify.min.js"></script>
    <script src="/js/dependencies/excellentexport.js"></script>
    <script src="/js/dependencies/jquery.base64.js"></script>
    <script src="/js/dependencies/jquery.dataTables.js"></script>
    <script src="/js/dependencies/tableExport.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
